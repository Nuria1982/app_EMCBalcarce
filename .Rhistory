gd_max <- round(((0.0217 * (dia_juliano^2)) - (14.967 * dia_juliano) + 3745.9), 0)
} else if (cultivo == "maiz_corto") {
gd_min <- round(((0.0134 * (dia_juliano^2)) - (9.8499 * dia_juliano) + 2339.9), 0)
gd_max <- round(((0.0134 * (dia_juliano^2)) - (9.8499 * dia_juliano) + 2789.9), 0)
} else if (cultivo == "soja") {
gd_min <- round(((-0.0476 * (dia_juliano^2)) + (30.212 * (dia_juliano)) - 4047.4), 0)
gd_max <- round(((-0.0447 * (dia_juliano^2)) + (26.268 * (dia_juliano)) - 2764.9), 0)
}
historicos_periodo_critico <- data.frame(
ano = integer(),
lluvia_acumulada = numeric(),
etp_acumulada = numeric(),
radiacion_global_media = numeric(),
dias_mayores_35 = numeric(),
inicio = as.Date(character()),
fin = as.Date(character())
)
for (ano in 2010:2025) {
datos_ano <- datos %>%
filter(
(format(Fecha, "%Y") == as.character(ano) & format(Fecha, "%m-%d") >= format(fecha_siembra_dia_mes, "%m-%d")) |
(format(Fecha, "%Y") == as.character(ano + 1) & format(Fecha, "%m-%d") < "12-31")
) %>%
arrange(Fecha) %>%
mutate(
Dia_Mes = format(Fecha, "%m-%d")
) %>%
mutate(
TTB = case_when(
cultivo == "maiz_largo" ~ if_else(Temperatura_Abrigo_150cm - 8 < 0,
0,
Temperatura_Abrigo_150cm - 8),
cultivo == "maiz_corto" ~ if_else(Temperatura_Abrigo_150cm - 8 < 0,
0,
Temperatura_Abrigo_150cm - 8),
cultivo == "soja" ~ if_else(Temperatura_Abrigo_150cm - 11 < 0,
0,
Temperatura_Abrigo_150cm - 11)
# ,
# TRUE ~ if_else(Temperatura_Abrigo_150cm - 9 < 0, 0, Temperatura_Abrigo_150cm - 9)
),
GD_acum = cumsum(TTB)
)
datos_periodo_critico <- datos_ano %>%
filter(GD_acum >= gd_min & GD_acum <= gd_max)
if (nrow(datos_periodo_critico) > 0) {
fecha_inicio <- min(datos_periodo_critico$Fecha)
fecha_fin <- max(datos_periodo_critico$Fecha)
lluvia_acumulada <- sum(round(datos_periodo_critico$Precipitacion_Pluviometrica, 0), na.rm = TRUE)
etp_acumulada <- sum(round(datos_periodo_critico$Evapotranspiracion_Potencial, 0), na.rm = TRUE)
radiacion_global_media <- mean(round(datos_periodo_critico$Radiacion_Global, 0), na.rm = TRUE)
dias_mayores_35 <- sum(datos_periodo_critico$Temperatura_Abrigo_150cm_Maxima >= 35, na.rm = TRUE)
} else {
fecha_inicio <- fecha_fin <- NA
lluvia_acumulada <- etp_acumulada <- radiacion_global_media <- dias_mayores_35 <- NA
}
historicos_periodo_critico <- rbind(
historicos_periodo_critico,
data.frame(
ano = ano,
lluvia_acumulada = lluvia_acumulada,
etp_acumulada = etp_acumulada,
radiacion_global_media = radiacion_global_media,
dias_mayores_35 = dias_mayores_35,
inicio = fecha_inicio,
fin = fecha_fin
)
)
}
# Convertir las fechas a día juliano
historicos_periodo_critico$inicio_juliano <- yday(historicos_periodo_critico$inicio)
historicos_periodo_critico$fin_juliano <- yday(historicos_periodo_critico$fin)
historicos_periodo_critico$inicio_juliano <- ifelse(historicos_periodo_critico$inicio_juliano < 100,
historicos_periodo_critico$inicio_juliano + 365,
historicos_periodo_critico$inicio_juliano)
# Calcular el promedio de los días julianos
promedio_inicio_juliano <- mean(historicos_periodo_critico$inicio_juliano, na.rm = TRUE)
promedio_fin_juliano <- mean(historicos_periodo_critico$fin_juliano, na.rm = TRUE)
# Convertir los días julianos promedio de vuelta a fechas
fecha_promedio_inicio <- as.Date(promedio_inicio_juliano - 1, origin = "2024-01-01")
fecha_promedio_fin <- as.Date(promedio_fin_juliano - 1, origin = "2024-01-01")
fecha_inicio <- format(fecha_promedio_inicio, "%d-%m")
fecha_fin <- format(fecha_promedio_fin, "%d-%m")
return(
list(
historicos = historicos_periodo_critico,
fecha_inicio = fecha_inicio,
fecha_fin = fecha_fin
)
)
}
##############
calcular_periodo_critico_cultivos <- function(datos, datos_historicos_avg) {
# Define las combinaciones de días y meses entre octubre y diciembre
fechas_siembra <- expand.grid(
mes_siembra = c(10, 11, 12, 1),
dia_siembra = 1:31
)
fechas_siembra <- fechas_siembra %>%
filter((mes_siembra == 10 & dia_siembra <= 31) |
(mes_siembra == 11 & dia_siembra <= 30) |
(mes_siembra == 12 & dia_siembra <= 31) |
(mes_siembra == 1 & dia_siembra <= 31))
# Inicializa un dataframe vacío para almacenar los resultados
resultados <- data.frame(
cultivo = character(),
fecha_siembra = character(),
fecha_inicio = character(),
fecha_fin = character(),
lluvia_acumulada = numeric(),
etp_acumulada = numeric(),
radiacion_media = numeric(),
dias_mayores_35 = numeric(),
stringsAsFactors = FALSE
)
# Lista de cultivos
cultivos <- c(
# "maiz_largo",
#             "maiz_corto",
"soja")
# Itera sobre cada combinación de fecha y cultivo
for (cultivo in cultivos) {
for (i in 1:nrow(fechas_siembra)) {
mes_siembra <- fechas_siembra$mes_siembra[i]
dia_siembra <- fechas_siembra$dia_siembra[i]
# Calcula el periodo crítico para la fecha y cultivo actuales
periodo_critico <- calcular_periodo_critico(mes_siembra, dia_siembra, cultivo, datos, datos_historicos_avg)
# Calcula la mediana de las estadísticas en los años de interés
mediana_lluvia <- median(round(periodo_critico$historicos$lluvia_acumulada, 0), na.rm = TRUE)
mediana_etp <- median(round(periodo_critico$historicos$etp_acumulada, 0), na.rm = TRUE)
promedio_radiacion <- mean(round(periodo_critico$historicos$radiacion_global_media, 0), na.rm = TRUE)
mediana_dias_mayores_35 <- median(round(periodo_critico$historicos$dias_mayores_35, 0), na.rm = TRUE)
# Añade los resultados al dataframe
resultados <- rbind(resultados, data.frame(
cultivo = cultivo,
fecha_siembra = sprintf("%02d-%02d", mes_siembra, dia_siembra),
fecha_inicio = periodo_critico$fecha_inicio,
fecha_fin = periodo_critico$fecha_fin,
lluvia_acumulada = mediana_lluvia,
etp_acumulada = mediana_etp,
radiacion_media = promedio_radiacion,
dias_mayores_35 = mediana_dias_mayores_35
))
}
}
return(resultados)
}
# Llama a la función y guarda el resultado
resultados_periodo_critico <- calcular_periodo_critico_cultivos(datos, datos_historicos_avg)
calcular_periodo_critico_auto <- function(cultivo, datos, datos_historicos_avg) {
resultados <- data.frame(
mes_siembra = integer(),
dia_siembra = integer(),
año = integer(),
lluvia_acumulada = numeric(),
etp_acumulada = numeric(),
radiacion_global_media = numeric(),
dias_mayores_35 = numeric(),
inicio_periodo = as.Date(character()),
fin_periodo = as.Date(character())
)
# Iterar por cada mes y día entre septiembre y diciembre
for (mes_siembra in 10:12) {
for (dia_siembra in 1:31) {
# Saltar días no válidos en cada mes
if (!tryCatch({
as.Date(sprintf("2024-%02d-%02d", mes_siembra, dia_siembra))
TRUE
}, error = function(e) FALSE)) {
next
}
# Fecha de siembra (día y mes)
fecha_siembra_dia_mes <- as.Date(sprintf("2024-%02d-%02d", mes_siembra, dia_siembra))
dia_juliano <- as.numeric(format(fecha_siembra_dia_mes, "%j"))
if (dia_juliano < 100) {
dia_juliano <- dia_juliano + 365
}
# Determinación de GD mínimos y máximos
if (cultivo == "maiz_largo") {
gd_min <- round(((0.0217 * (dia_juliano^2)) - (14.967 * dia_juliano) + 3295.9), 0)
gd_max <- round(((0.0217 * (dia_juliano^2)) - (14.967 * dia_juliano) + 3745.9), 0)
} else if (cultivo == "maiz_corto") {
gd_min <- round(((0.0134 * (dia_juliano^2)) - (9.8499 * dia_juliano) + 2339.9), 0)
gd_max <- round(((0.0134 * (dia_juliano^2)) - (9.8499 * dia_juliano) + 2789.9), 0)
} else if (cultivo == "soja") {
gd_min <- round(((-0.0476 * (dia_juliano^2)) + (30.212 * (dia_juliano)) - 4047.4), 0)
gd_max <- round(((-0.0447 * (dia_juliano^2)) + (26.268 * (dia_juliano)) - 2764.9), 0)
}
# Loop para cada año entre 2010 y 2025
for (ano in 2010:2025) {
datos_ano <- datos %>%
filter(
(format(Fecha, "%Y") == as.character(ano) & format(Fecha, "%m-%d") >= format(fecha_siembra_dia_mes, "%m-%d")) |
(format(Fecha, "%Y") == as.character(ano + 1) & format(Fecha, "%m-%d") < "12-31")
) %>%
arrange(Fecha) %>%
mutate(
Dia_Mes = format(Fecha, "%m-%d"),
TTB = case_when(
cultivo == "maiz_largo" ~ if_else(Temperatura_Abrigo_150cm - 8 < 0,
0,
Temperatura_Abrigo_150cm - 8),
cultivo == "maiz_corto" ~ if_else(Temperatura_Abrigo_150cm - 8 < 0,
0,
Temperatura_Abrigo_150cm - 8),
cultivo == "soja" ~ if_else(Temperatura_Abrigo_150cm - 11 < 0,
0,
Temperatura_Abrigo_150cm - 11)
),
GD_acum = cumsum(TTB)
)
# Filtrar datos dentro del periodo crítico de GD acumulados
datos_periodo_critico <- datos_ano %>%
filter(GD_acum >= gd_min & GD_acum <= gd_max)
if (nrow(datos_periodo_critico) > 0) {
fecha_inicio <- min(datos_periodo_critico$Fecha)
fecha_fin <- max(datos_periodo_critico$Fecha)
lluvia_acumulada <- sum(round(datos_periodo_critico$Precipitacion_Pluviometrica, 0), na.rm = TRUE)
etp_acumulada <- sum(round(datos_periodo_critico$Evapotranspiracion_Potencial, 0), na.rm = TRUE)
radiacion_global_media <- mean(round(datos_periodo_critico$Radiacion_Global, 0), na.rm = TRUE)
dias_mayores_35 <- sum(datos_periodo_critico$Temperatura_Abrigo_150cm_Maxima >= 35, na.rm = TRUE)
} else {
fecha_inicio <- fecha_fin <- NA
lluvia_acumulada <- etp_acumulada <- radiacion_global_media <- dias_mayores_35 <- NA
}
resultados <- rbind(
resultados,
data.frame(
mes_siembra = mes_siembra,
dia_siembra = dia_siembra,
año = ano,
lluvia_acumulada = lluvia_acumulada,
etp_acumulada = etp_acumulada,
radiacion_global_media = radiacion_global_media,
dias_mayores_35 = dias_mayores_35,
inicio_periodo = fecha_inicio,
fin_periodo = fecha_fin
)
)
}
}
}
return(resultados)
}
resultados_soja <- calcular_periodo_critico_auto("soja",
datos,
datos_historicos_avg)
resumen_soja <- resultados_soja %>%
mutate(
inicio_juliano = yday(inicio_periodo),
fin_juliano = yday(fin_periodo),
inicio_juliano = ifelse(inicio_juliano < 100,
inicio_juliano + 365,
inicio_juliano),
fin_juliano = ifelse(fin_juliano < 100,
fin_juliano + 365,
fin_juliano)) %>%
group_by(mes_siembra, dia_siembra) %>%
summarize(
mediana_lluvia_acumulada = median(lluvia_acumulada, na.rm = TRUE),
mediana_etp_acumulada = median(etp_acumulada, na.rm = TRUE),
promedio_radiacion_global = mean(radiacion_global_media, na.rm = TRUE),
promedio_dias_mayores_35 = mean(dias_mayores_35, na.rm = TRUE),
promedio_inicio_juliano = mean(inicio_juliano, na.rm = TRUE),
promedio_fin_juliano = mean(fin_juliano, na.rm = TRUE)
) %>%
mutate(
fecha_inicio = format(as.Date(promedio_inicio_juliano - 1,
origin = "2024-01-01"),
"%d-%m"),
fecha_fin = format(as.Date(promedio_fin_juliano - 1,
origin = "2024-01-01"),
"%d-%m")
) %>%
ungroup()
mejores_dias_por_cultivo <- resumen_soja %>%
arrange(desc(mediana_lluvia_acumulada),
desc(promedio_radiacion_global)) %>%
slice(1:5) %>%
ungroup()
write_xlsx(mejores_dias_por_cultivo,
"mejores_dias_soja.xlsx")
resumen_soja <- resultados_soja %>%
mutate(
inicio_juliano = yday(inicio_periodo),
fin_juliano = yday(fin_periodo),
inicio_juliano = ifelse(inicio_juliano < 100,
inicio_juliano + 365,
inicio_juliano),
fin_juliano = ifelse(fin_juliano < 100,
fin_juliano + 365,
fin_juliano)) %>%
group_by(mes_siembra, dia_siembra) %>%
summarize(
mediana_lluvia_acumulada = round(median(lluvia_acumulada, na.rm = TRUE), 0),
mediana_etp_acumulada = round(median(etp_acumulada, na.rm = TRUE), 0),
promedio_radiacion_global = round(mean(radiacion_global_media, na.rm = TRUE), 2),
promedio_dias_mayores_35 = round(mean(dias_mayores_35, na.rm = TRUE), 0),
promedio_inicio_juliano = mean(inicio_juliano, na.rm = TRUE),
promedio_fin_juliano = mean(fin_juliano, na.rm = TRUE)
) %>%
mutate(
fecha_inicio = format(as.Date(promedio_inicio_juliano - 1,
origin = "2024-01-01"),
"%d-%m"),
fecha_fin = format(as.Date(promedio_fin_juliano - 1,
origin = "2024-01-01"),
"%d-%m")
) %>%
ungroup()
mejores_dias_por_cultivo <- resumen_soja %>%
arrange(desc(mediana_lluvia_acumulada),
desc(promedio_radiacion_global)) %>%
slice(1:5) %>%
ungroup()
write_xlsx(mejores_dias_por_cultivo,
"mejores_dias_soja.xlsx")
resumen_soja <- resultados_soja %>%
mutate(
inicio_juliano = yday(inicio_periodo),
fin_juliano = yday(fin_periodo),
inicio_juliano = ifelse(inicio_juliano < 100,
inicio_juliano + 365,
inicio_juliano),
fin_juliano = ifelse(fin_juliano < 100,
fin_juliano + 365,
fin_juliano)) %>%
group_by(mes_siembra, dia_siembra) %>%
summarize(
mediana_lluvia_acumulada = round(median(lluvia_acumulada, na.rm = TRUE), 0),
mediana_etp_acumulada = round(median(etp_acumulada, na.rm = TRUE), 0),
promedio_radiacion_global = round(mean(radiacion_global_media, na.rm = TRUE), 2),
promedio_dias_mayores_35 = round(mean(dias_mayores_35, na.rm = TRUE), 0),
promedio_inicio_juliano = round(mean(inicio_juliano, na.rm = TRUE), 0),
promedio_fin_juliano = round(mean(fin_juliano, na.rm = TRUE), 0)
) %>%
mutate(
fecha_inicio = format(as.Date(promedio_inicio_juliano - 1,
origin = "2024-01-01"),
"%d-%m"),
fecha_fin = format(as.Date(promedio_fin_juliano - 1,
origin = "2024-01-01"),
"%d-%m")
) %>%
ungroup()
mejores_dias_por_cultivo <- resumen_soja %>%
arrange(desc(mediana_lluvia_acumulada),
desc(promedio_radiacion_global)) %>%
slice(1:5) %>%
ungroup()
write_xlsx(mejores_dias_por_cultivo,
"mejores_dias_soja.xlsx")
resultados_maiz_largo <- calcular_periodo_critico_auto("maiz_largo",
datos,
datos_historicos_avg)
resultados_maiz_corto <- calcular_periodo_critico_auto("maiz_corto",
datos,
datos_historicos_avg)
resumen_maiz_largo <- resultados_maiz_largo %>%
mutate(
inicio_juliano = yday(inicio_periodo),
fin_juliano = yday(fin_periodo),
inicio_juliano = ifelse(inicio_juliano < 100,
inicio_juliano + 365,
inicio_juliano),
fin_juliano = ifelse(fin_juliano < 100,
fin_juliano + 365,
fin_juliano)) %>%
group_by(mes_siembra, dia_siembra) %>%
summarize(
mediana_lluvia_acumulada = median(lluvia_acumulada, na.rm = TRUE),
mediana_etp_acumulada = median(etp_acumulada, na.rm = TRUE),
promedio_radiacion_global = mean(radiacion_global_media, na.rm = TRUE),
promedio_dias_mayores_35 = mean(dias_mayores_35, na.rm = TRUE),
promedio_inicio_juliano = mean(inicio_juliano, na.rm = TRUE),
promedio_fin_juliano = mean(fin_juliano, na.rm = TRUE)
) %>%
mutate(
fecha_inicio = format(as.Date(promedio_inicio_juliano - 1,
origin = "2024-01-01"),
"%d-%m"),
fecha_fin = format(as.Date(promedio_fin_juliano - 1,
origin = "2024-01-01"),
"%d-%m")
) %>%
ungroup()
resumen_maiz_corto <- resultados_maiz_corto %>%
mutate(
inicio_juliano = yday(inicio_periodo),
fin_juliano = yday(fin_periodo),
inicio_juliano = ifelse(inicio_juliano < 100,
inicio_juliano + 365,
inicio_juliano),
fin_juliano = ifelse(fin_juliano < 100,
fin_juliano + 365,
fin_juliano)) %>%
group_by(mes_siembra, dia_siembra) %>%
summarize(
mediana_lluvia_acumulada = median(lluvia_acumulada, na.rm = TRUE),
mediana_etp_acumulada = median(etp_acumulada, na.rm = TRUE),
promedio_radiacion_global = mean(radiacion_global_media, na.rm = TRUE),
promedio_dias_mayores_35 = mean(dias_mayores_35, na.rm = TRUE),
promedio_inicio_juliano = mean(inicio_juliano, na.rm = TRUE),
promedio_fin_juliano = mean(fin_juliano, na.rm = TRUE)
) %>%
mutate(
fecha_inicio = format(as.Date(promedio_inicio_juliano - 1,
origin = "2024-01-01"),
"%d-%m"),
fecha_fin = format(as.Date(promedio_fin_juliano - 1,
origin = "2024-01-01"),
"%d-%m")
) %>%
ungroup()
mejores_dias_por_cultivo <- resumen_maiz_largo %>%
arrange(desc(mediana_lluvia_acumulada),
desc(promedio_radiacion_global)) %>%
slice(1:5) %>%
ungroup()
write_xlsx(mejores_dias_por_cultivo,
"mejores_dias_maiz_largo.xlsx")
mejores_dias_por_cultivo <- resumen_maiz_corto %>%
arrange(desc(mediana_lluvia_acumulada),
desc(promedio_radiacion_global)) %>%
slice(1:5) %>%
ungroup()
write_xlsx(mejores_dias_por_cultivo,
"mejores_dias_maiz_corto.xlsx")
library(rsconnect)
library(sendmailR)
library(shiny)
library(shinyWidgets)
library(shinydashboard)
library(shinycssloaders)
library(DT)
library(tidyr)
library(ggplot2)
library(plotly)
library(dplyr)
library(bslib)
library(shinythemes)
library(bs4Dash)
library(lubridate)
library(png)
library(readxl)
library(writexl)
library(leaflet)
library(webshot)
library(httr)
library(jsonlite)
balcarce_EMC <- read_excel("balcarce_EMC.xlsx",
col_types = c("date", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text", "numeric", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric"))
dalbulus <- read_excel("dalbulus.xlsx")
datos_EMC <- balcarce_EMC
datos_EMC <- datos_EMC %>%
filter(Año >= 1970)
# datos_EMC <- subset(datos, select = -c(Direccion_Viento_200cm, Direccion_Viento_1000cm))
datos_EMC$Fecha <- as.Date(datos_EMC$Fecha, format = "%Y-%m-%d")
datos_EMC <- datos_EMC[order(datos_EMC$Fecha, decreasing = TRUE), ]
head(datos_EMC)
datos_actuales <- datos_EMC[!is.na(datos_EMC$Precipitacion_Pluviometrica) &
!is.na(datos_EMC$Temperatura_Abrigo_150cm_Maxima) &
!is.na(datos_EMC$Temperatura_Abrigo_150cm_Minima), ]
ultima_fecha <- max(datos_actuales$Fecha)
ultimos_datos <- datos_actuales[datos_actuales$Fecha == ultima_fecha, ]
lluvia_ultimo_dia <- ultimos_datos$Precipitacion_Pluviometrica
Tmax_ultimo_dia <- ultimos_datos$Temperatura_Abrigo_150cm_Maxima
Tmin_ultimo_dia <- ultimos_datos$Temperatura_Abrigo_150cm_Minima
## historicos 1991-2020 ##
datos_historicos <- datos_EMC %>%
filter(Año >= 1991 & Año <= 2020)
# datos_historicos
datos_historicos_avg <- datos_historicos %>%
mutate(Dia_Mes = format(Fecha, "%m-%d")) %>%
group_by(Dia_Mes) %>%
reframe(
Temperatura_media = mean(Temperatura_Abrigo_150cm, na.rm = TRUE),
Evapotranspiracion_media = mean(Evapotranspiracion_Potencial, na.rm = TRUE),
Precipitacion_media = mean(Precipitacion_Pluviometrica, na.rm = TRUE),
.groups = "drop"
)
datos_EMC <- datos_EMC %>%
mutate(Dia_Mes = format(Fecha, "%m-%d"))
datos <- datos_EMC %>%
left_join(datos_historicos_avg, by = "Dia_Mes") %>%
mutate(
Evapotranspiracion_Potencial = coalesce(Evapotranspiracion_Potencial, Evapotranspiracion_media),
Temperatura_Abrigo_150cm = coalesce(Temperatura_Abrigo_150cm, Temperatura_media)
) %>%
select(-Evapotranspiracion_media)
# datos
# write_xlsx(datos, "datos.xlsx")
#dalbulus <- dalbulus
runApp()
install.packages("anytime")
renv::purge()
renv::restore()
shiny::runApp()
shiny::runApp()
renv::restore()
install.packages("Matrix")
