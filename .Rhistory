left_join(fechas_temp_menor17, by = "Año_modificado")
# Calculamos la temperatura media entre las dos fechas para cada año modificado
temperatura_media <- Las_Breñas_INTA_año_modif %>%
left_join(fechas_temp, by = "Año_modificado") %>%
filter(Fecha >= Fecha_Mayor17 & Fecha <= Fecha_Menor17) %>%
group_by(Año_modificado) %>%
summarize(Temperatura_Media = mean(Temperatura_Ajustada_añomodif, na.rm = TRUE)) %>%
ungroup()
# Combinamos la información de fechas y temperatura media
resultados_temp17_Breñas <- fechas_temp %>%
left_join(temperatura_media, by = "Año_modificado")
# Ver los resultados
View(resultados_temp17_Breñas)
#exportamos los resultados a excel
write.xlsx(resultados_temp17_Breñas, file = "resultados_temp17_Breñas.xlsx")
shiny::runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
library(writexl)
#
write.xlsx(datos_filtrados3,
file,
row.names = FALSE)
write_xlsx(datos_filtrados3,
file,
row.names = FALSE)
write_xlsx(datos_filtrados3,
file)
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
shiny::runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
datos_EMC <- balcarce_EMC
# datos_EMC <- subset(datos, select = -c(Direccion_Viento_200cm, Direccion_Viento_1000cm))
datos_EMC$Fecha <- as.Date(datos_EMC$Fecha, format = "%Y-%m-%d")
datos_EMC <- datos_EMC[order(datos_EMC$Fecha, decreasing = TRUE), ]
head(datos_EMC)
datos_actuales <- datos_EMC[!is.na(datos_EMC$Precipitacion_Pluviometrica) &
!is.na(datos_EMC$Temperatura_Abrigo_150cm_Maxima) &
!is.na(datos_EMC$Temperatura_Abrigo_150cm_Minima), ]
ultima_fecha <- max(datos_actuales$Fecha)
ultimos_datos <- datos_actuales[datos_actuales$Fecha == ultima_fecha, ]
lluvia_ultimo_dia <- ultimos_datos$Precipitacion_Pluviometrica
Tmax_ultimo_dia <- ultimos_datos$Temperatura_Abrigo_150cm_Maxima
Tmin_ultimo_dia <- ultimos_datos$Temperatura_Abrigo_150cm_Minima
datos_historicos <- datos_EMC %>%
filter(Año >= 1991 & Año <= 2020)
library(rsconnect)
library(sendmailR)
library(shiny)
library(shinyWidgets)
library(shinydashboard)
library(shinycssloaders)
library(DT)
library(tidyr)
library(ggplot2)
library(plotly)
library(dplyr)
library(bslib)
library(shinythemes)
library(bs4Dash)
library(lubridate)
library(png)
library(readxl)
library(writexl)
balcarce_EMC <- read_excel("balcarce_EMC.xlsx",
col_types = c("date", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text", "numeric", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric"))
library(readxl)
balcarce_EMC <- read_excel("E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo/balcarce_EMC.xlsx",
col_types = c("date", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
View(balcarce_EMC)
datos_EMC <- balcarce_EMC
# datos_EMC <- subset(datos, select = -c(Direccion_Viento_200cm, Direccion_Viento_1000cm))
datos_EMC$Fecha <- as.Date(datos_EMC$Fecha, format = "%Y-%m-%d")
datos_EMC <- datos_EMC[order(datos_EMC$Fecha, decreasing = TRUE), ]
head(datos_EMC)
datos_actuales <- datos_EMC[!is.na(datos_EMC$Precipitacion_Pluviometrica) &
!is.na(datos_EMC$Temperatura_Abrigo_150cm_Maxima) &
!is.na(datos_EMC$Temperatura_Abrigo_150cm_Minima), ]
ultima_fecha <- max(datos_actuales$Fecha)
ultimos_datos <- datos_actuales[datos_actuales$Fecha == ultima_fecha, ]
lluvia_ultimo_dia <- ultimos_datos$Precipitacion_Pluviometrica
Tmax_ultimo_dia <- ultimos_datos$Temperatura_Abrigo_150cm_Maxima
Tmin_ultimo_dia <- ultimos_datos$Temperatura_Abrigo_150cm_Minima
datos_historicos <- datos_EMC %>%
filter(Año >= 1991 & Año <= 2020)
# datos_historicos
datos_historicos_avg <- datos_historicos %>%
mutate(Dia_Mes = format(Fecha, "%m-%d")) %>%
group_by(Dia_Mes) %>%
summarise(
Temperatura_media = mean(Temperatura_Abrigo_150cm, na.rm = TRUE),
Evapotranspiracion_media = mean(Evapotranspiracion_Potencial, na.rm = TRUE),
Precipitacion_media = mean(Precipitacion_Pluviometrica, na.rm = TRUE),
.groups = "drop"
)
datos_EMC <- datos_EMC %>%
mutate(Dia_Mes = format(Fecha, "%m-%d"))
datos <- datos_EMC %>%
left_join(datos_historicos_avg, by = "Dia_Mes") %>%
mutate(
Evapotranspiracion_Potencial = coalesce(Evapotranspiracion_Potencial, Evapotranspiracion_media),
Temperatura_Abrigo_150cm = coalesce(Temperatura_Abrigo_150cm, Temperatura_media)
) %>%
select(-Evapotranspiracion_media)
datos
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
write_xlsx(datos, datos.xlsx)
write_xlsx(datos, "datos.xlsx")
library(readxl)
balcarce_EMC <- read_excel("E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo/balcarce_EMC.xlsx",
col_types = c("date", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
View(balcarce_EMC)
datos_EMC <- balcarce_EMC
# datos_EMC <- subset(datos, select = -c(Direccion_Viento_200cm, Direccion_Viento_1000cm))
datos_EMC$Fecha <- as.Date(datos_EMC$Fecha, format = "%Y-%m-%d")
datos_EMC <- datos_EMC[order(datos_EMC$Fecha, decreasing = TRUE), ]
head(datos_EMC)
datos_actuales <- datos_EMC[!is.na(datos_EMC$Precipitacion_Pluviometrica) &
!is.na(datos_EMC$Temperatura_Abrigo_150cm_Maxima) &
!is.na(datos_EMC$Temperatura_Abrigo_150cm_Minima), ]
ultima_fecha <- max(datos_actuales$Fecha)
ultimos_datos <- datos_actuales[datos_actuales$Fecha == ultima_fecha, ]
lluvia_ultimo_dia <- ultimos_datos$Precipitacion_Pluviometrica
Tmax_ultimo_dia <- ultimos_datos$Temperatura_Abrigo_150cm_Maxima
Tmin_ultimo_dia <- ultimos_datos$Temperatura_Abrigo_150cm_Minima
datos_historicos <- datos_EMC %>%
filter(Año >= 1991 & Año <= 2020)
# datos_historicos
datos_historicos_avg <- datos_historicos %>%
mutate(Dia_Mes = format(Fecha, "%m-%d")) %>%
group_by(Dia_Mes) %>%
summarise(
Temperatura_media = mean(Temperatura_Abrigo_150cm, na.rm = TRUE),
Evapotranspiracion_media = mean(Evapotranspiracion_Potencial, na.rm = TRUE),
Precipitacion_media = mean(Precipitacion_Pluviometrica, na.rm = TRUE),
.groups = "drop"
)
datos_EMC <- datos_EMC %>%
mutate(Dia_Mes = format(Fecha, "%m-%d"))
datos <- datos_EMC %>%
left_join(datos_historicos_avg, by = "Dia_Mes") %>%
mutate(
Evapotranspiracion_Potencial = coalesce(Evapotranspiracion_Potencial, Evapotranspiracion_media),
Temperatura_Abrigo_150cm = coalesce(Temperatura_Abrigo_150cm, Temperatura_media)
) %>%
select(-Evapotranspiracion_media)
datos
write_xlsx(datos, "datos.xlsx")
datos_EMC <- datos_EMC %>%
filter(Año >= 1970)
datos_EMC$Fecha <- as.Date(datos_EMC$Fecha, format = "%Y-%m-%d")
datos_EMC <- datos_EMC[order(datos_EMC$Fecha, decreasing = TRUE), ]
head(datos_EMC)
datos_actuales <- datos_EMC[!is.na(datos_EMC$Precipitacion_Pluviometrica) &
!is.na(datos_EMC$Temperatura_Abrigo_150cm_Maxima) &
!is.na(datos_EMC$Temperatura_Abrigo_150cm_Minima), ]
ultima_fecha <- max(datos_actuales$Fecha)
ultimos_datos <- datos_actuales[datos_actuales$Fecha == ultima_fecha, ]
lluvia_ultimo_dia <- ultimos_datos$Precipitacion_Pluviometrica
Tmax_ultimo_dia <- ultimos_datos$Temperatura_Abrigo_150cm_Maxima
Tmin_ultimo_dia <- ultimos_datos$Temperatura_Abrigo_150cm_Minima
datos_historicos <- datos_EMC %>%
filter(Año >= 1991 & Año <= 2020)
# datos_historicos
datos_historicos_avg <- datos_historicos %>%
mutate(Dia_Mes = format(Fecha, "%m-%d")) %>%
group_by(Dia_Mes) %>%
summarise(
Temperatura_media = mean(Temperatura_Abrigo_150cm, na.rm = TRUE),
Evapotranspiracion_media = mean(Evapotranspiracion_Potencial, na.rm = TRUE),
Precipitacion_media = mean(Precipitacion_Pluviometrica, na.rm = TRUE),
.groups = "drop"
)
datos_EMC <- datos_EMC %>%
mutate(Dia_Mes = format(Fecha, "%m-%d"))
datos <- datos_EMC %>%
left_join(datos_historicos_avg, by = "Dia_Mes") %>%
mutate(
Evapotranspiracion_Potencial = coalesce(Evapotranspiracion_Potencial, Evapotranspiracion_media),
Temperatura_Abrigo_150cm = coalesce(Temperatura_Abrigo_150cm, Temperatura_media)
) %>%
select(-Evapotranspiracion_media)
datos
write_xlsx(datos, "datos.xlsx")
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
shiny::runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
datos_periodo_critico
datos
datos_ano
for (ano in 2010:2025) {
datos_ano <- datos %>%
filter(
(format(Fecha, "%Y") == as.character(ano) & format(Fecha, "%m-%d") >= fecha_siembra_dia_mes) |
(format(Fecha, "%Y") == as.character(ano + 1) & format(Fecha, "%m-%d") < "12-31")
) %>%
arrange(Fecha) %>%
mutate(
Dia_Mes = format(Fecha, "%m-%d")
) %>%
mutate(
TTB = case_when(
cultivo == "maiz" ~ if_else(Temperatura_Abrigo_150cm - 8 < 0, 0, Temperatura_Abrigo_150cm - 8),
cultivo == "soja" ~ if_else(Temperatura_Abrigo_150cm - 11 < 0, 0, Temperatura_Abrigo_150cm - 11)
# ,
# TRUE ~ if_else(Temperatura_Abrigo_150cm - 9 < 0, 0, Temperatura_Abrigo_150cm - 9)
),
GD_acum = cumsum(TTB)
)
{
:
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
fecha_siembra = "10-10-2024"
fecha <- as.Date(input$fecha_siembra)
dia_juliano <- yday(fecha_siembra)
dia_juliano
GD_soja <- ((-0.0468 * (dia_juliano^2)) + (26.592 * (dia_juliano)) - 2529.3)
GD_soja
GD_soja <- round(((-0.0468 * (dia_juliano^2)) + (26.592 * (dia_juliano)) - 2529.3), 0)
GD_soja
fecha_siembra = "10-10-2024"
fecha <- as.Date(input$fecha_siembra)
fecha_siembra = "10-10-2024"
dia_juliano <- yday(fecha_siembra)
GD_R3 <- ((-0.0478 * (dia_juliano^2)) + (30.212 * (dia_juliano)) - 4047.4)
GD_R6 <- ((-0.0449 * (dia_juliano^2)) + (26.268 * (dia_juliano)) - 2764.9)
GD_R3
GD_R3 <- round(((-0.0478 * (dia_juliano^2)) + (30.212 * (dia_juliano)) - 4047.4), 0)
GD_R6 <- round(((-0.0449 * (dia_juliano^2)) + (26.268 * (dia_juliano)) - 2764.9), 0)
GD_R3
GD_R6
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dia_juliano <- yday("2024-01-05")
dia_juliano
GD_R3 <- round(((-0.0476 * (dia_juliano^2)) + (30.212 * (dia_juliano)) - 4047.4), 0)
GD_R3
dia_juliano <- yday("2024-01-05")
print(dia_juliano)
GD_R3 <- round(((-0.0476 * (dia_juliano^2)) + (4306.2 * (dia_juliano)) - 1e8), 0)
GD_R3
dia_juliano <- yday("2022-01-10")
dia_juliano
GD_soja <- round(((-0.0466 * (dia_juliano^2)) + (26.592 * (dia_juliano)) - 2529.3), 0)
GD_soja
dia_juliano <- yday("2022-01-10")
GD_soja
dia_juliano
dia_juliano <- yday("2022-01-5")
dia_juliano
GD_soja <- round(((-1.2082 * (dia_juliano^2)) + (7.08 * (dia_juliano)) - 1236.2), 0)
GD_soja
dia_juliano <- yday("2022-11-5")
GD_soja <- round(((-1.2082 * (dia_juliano^2)) + (7.08 * (dia_juliano)) - 1236.2), 0)
GD_soja
dia_juliano
dia_juliano <- yday("2022-12-5")
dia_juliano
GD_soja <- round(((-1.2082 * (dia_juliano^2)) + (7.08 * (dia_juliano)) - 1236.2), 0)
GD_soja
dia_juliano <- yday("2022-12-5")
GD_soja <- round(((-0.0532 * (dia_juliano^2)) + (30.529 * (dia_juliano)) - 3130.5), 0)
GD_soja
dia_juliano
dia_juliano <- yday("2022-12-10")
GD_soja <- round(((-0.0532 * (dia_juliano^2)) + (30.529 * (dia_juliano)) - 3130.5), 0)
GD_soja
dia_juliano <- yday("2022-01-10")
GD_soja <- round(((-0.0532 * (dia_juliano^2)) + (30.529 * (dia_juliano)) - 3130.5), 0)
GD_soja
dia_juliano <- yday("2022-01-10")
if (dia_juliano < 30) {
dia_juliano <- dia_juliano + 365
}
dia_juliano
GD_soja <- round(((-0.0466 * (dia_juliano^2)) + (26.344 * (dia_juliano)) - 2479.9), 0)
GD_soja
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
fecha_siembra_dia_mes <- "05-10"
fecha_siembra_dia_mes
dia_juliano <- yday(fecha_siembra_dia_mes)
library(rsconnect)
library(sendmailR)
library(shiny)
library(shinyWidgets)
library(shinydashboard)
library(shinycssloaders)
library(DT)
library(tidyr)
library(ggplot2)
library(plotly)
library(dplyr)
library(bslib)
library(shinythemes)
library(bs4Dash)
library(lubridate)
library(png)
library(readxl)
library(writexl)
library(leaflet)
dia_juliano <- yday(fecha_siembra_dia_mes)
fecha_siembra_dia_mes <- as.Date("05-10")
dia_siembra <- 2
mes_siembra <- 5
# fecha_siembra_dia_mes <- sprintf("%02d-%02d", mes_siembra, dia_siembra)
fecha_siembra <- as.Date(sprintf("%02d-%02d", dia_siembra, mes_siembra), format = "%d-%m")
fecha_siembra
dia_juliano <- as.numeric(format(fecha_siembra, "%j"))
dia_juliano
if (dia_juliano < 60) {
dia_juliano <- dia_juliano + 365
}
gd_min <- round(((-0.0476 * (dia_juliano^2)) + (30.212 * (dia_juliano)) - 4047.4), 0)
gd_max <- round(((-0.0447 * (dia_juliano^2)) + (26.268 * (dia_juliano)) - 2764.9), 0)
}
if (dia_juliano < 60) {
dia_juliano <- dia_juliano + 365
}
gd_min <- round(((-0.0476 * (dia_juliano^2)) + (30.212 * (dia_juliano)) - 4047.4), 0)
gd_max <- round(((-0.0447 * (dia_juliano^2)) + (26.268 * (dia_juliano)) - 2764.9), 0)
gd_min
gd_max
dia_siembra <- 2
mes_siembra <- 12
# fecha_siembra_dia_mes <- sprintf("%02d-%02d", mes_siembra, dia_siembra)
fecha_siembra <- as.Date(sprintf("%02d-%02d", dia_siembra, mes_siembra), format = "%d-%m")
fecha_siembr
fecha_siembra
dia_juliano <- as.numeric(format(fecha_siembra, "%j"))
dia_juliano
if (dia_juliano < 60) {
dia_juliano <- dia_juliano + 365
}
gd_min <- round(((-0.0476 * (dia_juliano^2)) + (30.212 * (dia_juliano)) - 4047.4), 0)
gd_max <- round(((-0.0447 * (dia_juliano^2)) + (26.268 * (dia_juliano)) - 2764.9), 0)
gd_min
gd_max
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
fecha_siembra
str(fecha_siembra)
str(dia_juliano)
fecha_siembra_dia_mes
str(fecha_siembra_dia_mes)
fecha_siembra_dia_mes <- as.Date(fecha_siembra_dia_mes)
fecha_siembra_dia_mes <- as.Date(fecha_siembra_dia_mes, format = "%d-%m")
str(fecha_siembra_dia_mes)
runApp()
dia_juliano <- as.numeric(format(fecha_siembra_dia_mes, "%j"))
dia_juliano
fecha_siembra
dia_juliano <- as.numeric(format(fecha_siembra, "%j"))
dia_juliano
runApp()
runApp()
runApp()
dia_siembra
mes_siembra
fecha_siembra_dia_mes
dia_siembra <- as.numeric(input$dia_siembra_ambiente)
mes_siembra <- as.numeric(input$mes_siembra_ambiente)
dia_siembra <- 5
mes_siembra <- 10
fecha_siembra_dia_mes <- sprintf("%02d-%02d", mes_siembra, dia_siembra)
fecha_siembra_dia_mes
str(fecha_siembra_dia_mes)
fecha_siembra_dia_mes <- as.Date(fecha_siembra_dia_mes)
fecha_siembra_dia_mes <- as.Date(fecha_siembra_dia_mes, format = "%d-%m")
fecha_siembra_dia_mes
str(fecha_siembra_dia_mes)
dia_juliano <- as.numeric(format(fecha_siembra_dia_mes, "%j"))
dia_juliano
dia_siembra <- 5
mes_siembra <- 10
fecha_siembra_dia_mes <- sprintf("%02d-%02d", dia_siembra, mes_siembra)
fecha_siembra_dia_mes <- as.Date(fecha_siembra_dia_mes, format = "%d-%m")
dia_juliano <- as.numeric(format(fecha_siembra_dia_mes, "%j"))
fecha_siembra_dia_me
fecha_siembra_dia_mes
dia_juliano
runApp()
dia_siembra
fecha_siembra_dia_mes <- sprintf("%02d-%02d", dia_siembra, mes_siembra)
fecha_siembra_dia_mes <- as.Date(fecha_siembra_dia_mes, format = "%d-%m")
dia_juliano <- as.numeric(format(fecha_siembra_dia_mes, "%j"))
fecha_siembra_dia_mes
# fecha_siembra_dia_mes <- sprintf("%02d-%02d", dia_siembra, mes_siembra)
# fecha_siembra_dia_mes <- as.Date(fecha_siembra_dia_mes, format = "%d-%m")
fecha_siembra_dia_mes <- as.Date(sprintf("%02d-%02d", dia_siembra, mes_siembra), format = "%d-%m")
dia_juliano <- as.numeric(format(fecha_siembra_dia_mes, "%j"))
dia_juliano
runApp()
fecha_siembra_dia_mes
runApp()
runApp()
runApp()
dia_juliano = 10
if (dia_juliano < 100) {
dia_juliano <- dia_juliano + 365
}
dia_juliano
gd_min <- round(((-0.0476 * (dia_juliano^2)) + (30.212 * (dia_juliano)) - 4047.4), 0)
gd_max <- round(((-0.0447 * (dia_juliano^2)) + (26.268 * (dia_juliano)) - 2764.9), 0)
gd_min
gd_max
dia_juliano = 10
gd_min <- round(((-0.0476 * (dia_juliano^2)) + (30.212 * (dia_juliano)) - 4047.4), 0)
gd_max <- round(((-0.0447 * (dia_juliano^2)) + (26.268 * (dia_juliano)) - 2764.9), 0)
gd_min
gd_max
dia_juliano = 30
if (dia_juliano < 100) {
dia_juliano <- dia_juliano + 365
}
gd_min <- round(((-0.0476 * (dia_juliano^2)) + (30.212 * (dia_juliano)) - 4047.4), 0)
gd_max <- round(((-0.0447 * (dia_juliano^2)) + (26.268 * (dia_juliano)) - 2764.9), 0)
gd_max
gd_min
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
