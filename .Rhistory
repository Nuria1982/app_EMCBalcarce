}
# Ajustamos el modelo y predecimos la temperatura ajustada
# para cada año calendario
Las_Breñas_INTA <- Las_Breñas_INTA %>%
group_by(año) %>%
nest() %>%
mutate(modelo = map(data, fit_sinusoidal),
predicciones = map2(data, modelo, ~if (!is.null(.y)) {
augment(.y, newdata = .x) %>%
select(Dia, .fitted) %>%
rename(Temperatura_Ajustada = .fitted)
} else {
.x %>%
mutate(Temperatura_Ajustada = NA)
})) %>%
mutate(data = map2(data, predicciones, ~left_join(.x, .y, by = "Dia"))) %>%
select(-modelo, -predicciones) %>%
unnest(cols = data) %>%
ungroup()
View(Las_Breñas_INTA)
# Calculamos la fecha de la primera helada (temp < 1ºC) en cada año
fecha_primera_helada <- Las_Breñas_INTA %>%
group_by(Año) %>%
filter(tmin < 1) %>%
summarize(fecha_primera_helada = min(Fecha)) %>%
ungroup()
# Calculamos la fecha de la primera helada (temp < 1ºC) en cada año
fecha_primera_helada <- Las_Breñas_INTA %>%
group_by(año) %>%
filter(tmin < 1) %>%
summarize(fecha_primera_helada = min(Fecha)) %>%
ungroup()
# Calcular las fechas a partir de las cuales la temp es > 15ºC y < 15ºC
# para cada año calendario
resultados_temp15_Breñas <- Las_Breñas_INTA %>%
group_by(año) %>%
summarize(
fecha_temp_mayor_15 = min(Fecha[Temperatura_Ajustada < 15], na.rm = TRUE),
fecha_temp_menor_15 = max(Fecha[Temperatura_Ajustada < 15], na.rm = TRUE)
) %>%
mutate(
num_dias_temp15 = as.numeric(difftime(fecha_temp_mayor_15, fecha_temp_menor_15, units = "days"))
) %>%
left_join(fecha_primera_helada, by = "año") %>%
ungroup()
# Ver los resultados
View(resultados_temp15_Breñas)
# exportamos a excel los resultados
write.xlsx(resultados_temp15_Breñas, file = "resultados_temp15_Breñas.xlsx")
# Aplicamos el ajuste sinusoidal y calculamos la temperatura ajustada para cada
# año modificado
Las_Breñas_INTA_año_modif <- Las_Breñas_INTA %>%
group_by(Año_modificado) %>%
nest() %>%
mutate(modelo = map(data, fit_sinusoidal),
predicciones = map2(data, modelo, ~if (!is.null(.y)) {
augment(.y, newdata = .x) %>%
select(Dia, .fitted) %>%
rename(Temperatura_Ajustada_añomodif = .fitted)
} else {
.x %>%
mutate(Temperatura_Ajustada_añomodif = NA)
})) %>%
mutate(data = map2(data, predicciones, ~mutate(.x, Temperatura_Ajustada_añomodif = .y$Temperatura_Ajustada_añomodif))) %>%
select(-modelo, -predicciones) %>%
unnest(cols = data) %>%
ungroup()
# Calculamos la fecha a partir de la cual la temperatura ajustada
# es > 17ºC para cada año modificado
fechas_temp_mayor17 <- Las_Breñas_INTA_año_modif %>%
group_by(Año_modificado) %>%
filter(Temperatura_Ajustada_añomodif > 17) %>%
summarize(Fecha_Mayor17 = min(Fecha)) %>%
ungroup()
# Calcular la fecha a partir de la cual la temperatura ajustada
# es < 17ºC para cada año modificado
fechas_temp_menor17 <- Las_Breñas_INTA_año_modif %>%
group_by(Año_modificado) %>%
filter(Temperatura_Ajustada_añomodif > 17) %>%
summarize(Fecha_Menor17 = max(Fecha)) %>%
ungroup()
#unimos los dos df mayor_17 y menor_17
fechas_temp <- fechas_temp_mayor17 %>%
left_join(fechas_temp_menor17, by = "Año_modificado")
# Calculamos la temperatura media entre las dos fechas para cada año modificado
temperatura_media <- Las_Breñas_INTA_año_modif %>%
left_join(fechas_temp, by = "Año_modificado") %>%
filter(Fecha >= Fecha_Mayor17 & Fecha <= Fecha_Menor17) %>%
group_by(Año_modificado) %>%
summarize(Temperatura_Media = mean(Temperatura_Ajustada_añomodif, na.rm = TRUE)) %>%
ungroup()
# Combinamos la información de fechas y temperatura media
resultados_temp17_Breñas <- fechas_temp %>%
left_join(temperatura_media, by = "Año_modificado")
# Ver los resultados
View(resultados_temp17_Breñas)
#exportamos los resultados a excel
write.xlsx(resultados_temp17_Breñas, file = "resultados_temp17_Breñas.xlsx")
shiny::runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
View(datos_historicos)
datos_historicos_avg <- datos_historicos %>%
mutate(Dia_Mes = format(Fecha, "%m-%d")) %>%
group_by(Dia_Mes) %>%
summarise(
Temperatura_media = mean(Temperatura_Abrigo_150cm, na.rm = TRUE),
Evapotranspiracion_media = mean(Evapotranspiracion_Potencial, na.rm = TRUE),
Precipitacion_media = mean(Precipitacion_Pluviometrica, na.rm = TRUE),
.groups = "drop"
)
balcarce_EMC <- read_excel("balcarce_EMC.xlsx",
col_types = c("date", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text", "numeric", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric"))
datos <- balcarce_EMC
datos <- subset(datos, select = -c(Direccion_Viento_200cm, Direccion_Viento_1000cm))
datos$Fecha <- as.Date(datos$Fecha, format = "%Y-%m-%d")
datos <- datos[order(datos$Fecha, decreasing = TRUE), ]
datos_historicos <- datos %>%
filter(Año >= 1991 & Año <= 2020)
datos_historicos_avg <- datos_historicos %>%
mutate(Dia_Mes = format(Fecha, "%m-%d")) %>%
group_by(Dia_Mes) %>%
summarise(
Temperatura_media = mean(Temperatura_Abrigo_150cm, na.rm = TRUE),
Evapotranspiracion_media = mean(Evapotranspiracion_Potencial, na.rm = TRUE),
Precipitacion_media = mean(Precipitacion_Pluviometrica, na.rm = TRUE),
.groups = "drop"
)
View(datos_historicos_avg)
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
balcarce_EMC <- read_excel("balcarce_EMC.xlsx",
col_types = c("date", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text", "numeric", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric"))
datos <- balcarce_EMC
datos <- subset(datos, select = -c(Direccion_Viento_200cm, Direccion_Viento_1000cm))
datos$Fecha <- as.Date(datos$Fecha, format = "%Y-%m-%d")
datos <- datos[order(datos$Fecha, decreasing = TRUE), ]
datos_actuales <- datos[!is.na(datos$Precipitacion_Pluviometrica) &
!is.na(datos$Temperatura_Abrigo_150cm_Maxima) &
!is.na(datos$Temperatura_Abrigo_150cm_Minima), ]
ultima_fecha <- max(datos_actuales$Fecha)
ultimos_datos <- datos_actuales[datos_actuales$Fecha == ultima_fecha, ]
lluvia_ultimo_dia <- ultimos_datos$Precipitacion_Pluviometrica
Tmax_ultimo_dia <- ultimos_datos$Temperatura_Abrigo_150cm_Maxima
Tmin_ultimo_dia <- ultimos_datos$Temperatura_Abrigo_150cm_Minima
datos_historicos <- datos %>%
filter(Año >= 1991 & Año <= 2020)
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
df_siembra$GD_acum
datos_filtrados
datos_filtrados <- datos_filtrados %>%
left_join(datos_historicos_avg, by = "Dia_Mes") %>%
arrange(Fecha) %>%
mutate(
Temperatura_Abrigo_150cm = coalesce(Temperatura_Abrigo_150cm, Temperatura_media),
Evapotranspiracion_Potencial = coalesce(Evapotranspiracion_Potencial, Evapotranspiracion_media),
Precipitacion_Pluviometrica = coalesce(Precipitacion_Pluviometrica, Precipitacion_media),
TTB = if_else(Temperatura_Abrigo_150cm - 8 < 0,
0,
Temperatura_Abrigo_150cm - 8),
GD_acum = cumsum(TTB),
Ttrelativo = GD_acum / 1890,
Kc = if_else(Ttrelativo > 0.16,
2.988041 * Ttrelativo^4 - 4.052411 * Ttrelativo^3 - 3.999317 * Ttrelativo^2 + 6.015032 * Ttrelativo - 0.390632,
0.4),
ETM = Kc * Evapotranspiracion_Potencial,
Fr_agua_util = NA_real_,
agua_util = NA_real_,
ETR = NA_real_,
deficiencia = NA_real_
)
datos_filtrados <- datos %>%
filter(Fecha >= fecha_siembra) %>%
select(Fecha, Temperatura_Abrigo_150cm, Precipitacion_Pluviometrica, Evapotranspiracion_Potencial)
fecha_siembra <- as.Date(input$fecha_siembra)
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
datos_filtrados <- datos %>%
filter(Fecha >= fecha_siembra) %>%
select(Fecha, Temperatura_Abrigo_150cm, Precipitacion_Pluviometrica, Evapotranspiracion_Potencial)
fecha_siembra <- as.Date(2023-10-23)
datos_filtrados <- datos %>%
filter(Fecha >= fecha_siembra) %>%
select(Fecha, Temperatura_Abrigo_150cm, Precipitacion_Pluviometrica, Evapotranspiracion_Potencial)
datos_filtrados <- datos_filtrados %>%
mutate(Dia_Mes = format(Fecha, "%m-%d"))
datos_historicos_avg <- datos_historicos %>%
mutate(Dia_Mes = format(Fecha, "%m-%d")) %>%
group_by(Dia_Mes) %>%
summarise(
Temperatura_media = mean(Temperatura_Abrigo_150cm, na.rm = TRUE),
Evapotranspiracion_media = mean(Evapotranspiracion_Potencial, na.rm = TRUE),
Precipitacion_media = mean(Precipitacion_Pluviometrica, na.rm = TRUE),
.groups = "drop"
)
datos_filtrados <- datos_filtrados %>%
left_join(datos_historicos_avg, by = "Dia_Mes") %>%
arrange(Fecha) %>%
mutate(
Temperatura_Abrigo_150cm = coalesce(Temperatura_Abrigo_150cm, Temperatura_media),
Evapotranspiracion_Potencial = coalesce(Evapotranspiracion_Potencial, Evapotranspiracion_media),
Precipitacion_Pluviometrica = coalesce(Precipitacion_Pluviometrica, Precipitacion_media),
TTB = if_else(Temperatura_Abrigo_150cm - 8 < 0,
0,
Temperatura_Abrigo_150cm - 8),
GD_acum = cumsum(TTB),
Ttrelativo = GD_acum / 1890,
Kc = if_else(Ttrelativo > 0.16,
2.988041 * Ttrelativo^4 - 4.052411 * Ttrelativo^3 - 3.999317 * Ttrelativo^2 + 6.015032 * Ttrelativo - 0.390632,
0.4),
ETM = Kc * Evapotranspiracion_Potencial,
Fr_agua_util = NA_real_,
agua_util = NA_real_,
ETR = NA_real_,
deficiencia = NA_real_
)
datos_filtrados$Fr_agua_util[1] <- fraccion_inicial
datos_filtrados$agua_util[1] <- fraccion_inicial * agua_util_total_val
fraccion_inicial <- 0.5
agua_util_total_val <- 162
disminucion_et_val <- 1.2
datos_filtrados <- datos_filtrados %>%
left_join(datos_historicos_avg, by = "Dia_Mes") %>%
arrange(Fecha) %>%
mutate(
Temperatura_Abrigo_150cm = coalesce(Temperatura_Abrigo_150cm, Temperatura_media),
Evapotranspiracion_Potencial = coalesce(Evapotranspiracion_Potencial, Evapotranspiracion_media),
Precipitacion_Pluviometrica = coalesce(Precipitacion_Pluviometrica, Precipitacion_media),
TTB = if_else(Temperatura_Abrigo_150cm - 8 < 0,
0,
Temperatura_Abrigo_150cm - 8),
GD_acum = cumsum(TTB),
Ttrelativo = GD_acum / 1890,
Kc = if_else(Ttrelativo > 0.16,
2.988041 * Ttrelativo^4 - 4.052411 * Ttrelativo^3 - 3.999317 * Ttrelativo^2 + 6.015032 * Ttrelativo - 0.390632,
0.4),
ETM = Kc * Evapotranspiracion_Potencial,
Fr_agua_util = NA_real_,
agua_util = NA_real_,
ETR = NA_real_,
deficiencia = NA_real_
)
datos_filtrados <- datos %>%
filter(Fecha >= fecha_siembra) %>%
select(Fecha, Temperatura_Abrigo_150cm, Precipitacion_Pluviometrica, Evapotranspiracion_Potencial)
datos_filtrados <- datos_filtrados %>%
mutate(Dia_Mes = format(Fecha, "%m-%d"))
datos_historicos_avg <- datos_historicos %>%
mutate(Dia_Mes = format(Fecha, "%m-%d")) %>%
group_by(Dia_Mes) %>%
summarise(
Temperatura_media = mean(Temperatura_Abrigo_150cm, na.rm = TRUE),
Evapotranspiracion_media = mean(Evapotranspiracion_Potencial, na.rm = TRUE),
Precipitacion_media = mean(Precipitacion_Pluviometrica, na.rm = TRUE),
.groups = "drop"
)
fraccion_inicial <- 0.5
agua_util_total_val <- 162
disminucion_et_val <- 1.2
datos_filtrados <- datos_filtrados %>%
left_join(datos_historicos_avg, by = "Dia_Mes") %>%
arrange(Fecha) %>%
mutate(
Temperatura_Abrigo_150cm = coalesce(Temperatura_Abrigo_150cm, Temperatura_media),
Evapotranspiracion_Potencial = coalesce(Evapotranspiracion_Potencial, Evapotranspiracion_media),
Precipitacion_Pluviometrica = coalesce(Precipitacion_Pluviometrica, Precipitacion_media),
TTB = if_else(Temperatura_Abrigo_150cm - 8 < 0,
0,
Temperatura_Abrigo_150cm - 8),
GD_acum = cumsum(TTB),
Ttrelativo = GD_acum / 1890,
Kc = if_else(Ttrelativo > 0.16,
2.988041 * Ttrelativo^4 - 4.052411 * Ttrelativo^3 - 3.999317 * Ttrelativo^2 + 6.015032 * Ttrelativo - 0.390632,
0.4),
ETM = Kc * Evapotranspiracion_Potencial,
Fr_agua_util = NA_real_,
agua_util = NA_real_,
ETR = NA_real_,
deficiencia = NA_real_
)
datos_filtrados$Fr_agua_util[1] <- fraccion_inicial
datos_filtrados$agua_util[1] <- fraccion_inicial * agua_util_total_val
for (i in 2:nrow(datos_filtrados)) {
if (datos_filtrados$GD_acum[i - 1] > 1890) {
break
}
datos_filtrados$ETR[i] <- if_else(
is.na(datos_filtrados$Fr_agua_util[i - 1]) | is.na(datos_filtrados$ETM[i]),
NA_real_,
if_else(
datos_filtrados$Fr_agua_util[i - 1] >= input$umbral_et,
datos_filtrados$ETM[i],
disminucion_et_val * datos_filtrados$Fr_agua_util[i - 1] * datos_filtrados$ETM[i]
)
)
datos_filtrados$agua_util[i] <- if_else(
is.na(datos_filtrados$agua_util[i - 1]) | is.na(datos_filtrados$Precipitacion_Pluviometrica[i]) | is.na(datos_filtrados$ETR[i]),
NA_real_,
if_else(
datos_filtrados$agua_util[i - 1] + datos_filtrados$Precipitacion_Pluviometrica[i] - datos_filtrados$ETR[i] > agua_util_total_val,
agua_util_total_val,
datos_filtrados$agua_util[i - 1] + datos_filtrados$Precipitacion_Pluviometrica[i] - datos_filtrados$ETR[i]
)
)
datos_filtrados$Fr_agua_util[i] <- if_else(
is.na(datos_filtrados$agua_util[i]) | is.na(agua_util_total_val),
NA_real_,
datos_filtrados$agua_util[i] / agua_util_total_val
)
datos_filtrados$deficiencia[i] <- if_else(
is.na(datos_filtrados$ETR[i]) | is.na(datos_filtrados$ETM[i]),
NA_real_,
datos_filtrados$ETR[i] - datos_filtrados$ETM[i]
)
}
View(datos_filtrados)
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
fecha_min <- min(df_siembra$Fecha[df_siembra$GD_acum >= 670], na.rm = TRUE)
agua_util <- ggplot(datos_filtrados, aes(x = Fecha)) +
geom_line(aes(y = Fr_agua_util , color = "Fr_agua_util")) +
geom_rect(aes(xmin = fecha_min,
xmax = fecha_max,
ymin = -Inf,
ymax = Inf),
fill = "blue",
alpha = 0.2,
color = NA) +
labs(title = "", x = "",
y = "Fracción de Agua Útil (0 - 1)") +
theme_minimal() +
scale_color_manual(values = c("#E9C46A")) +
guides(color = "none") +
coord_cartesian(ylim = c(0, NA))
agua_util
fecha_min <- min(datos_filtrados$Fecha[datos_filtrados$GD_acum >= 670],
na.rm = TRUE)
fecha_max <- max(datos_filtrados$Fecha[datos_filtradosa$GD_acum <= 1120],
na.rm = TRUE)
fecha_max <- max(datos_filtrados$Fecha[datos_filtrados$GD_acum <= 1120],
na.rm = TRUE)
agua_util <- ggplot(datos_filtrados, aes(x = Fecha)) +
geom_line(aes(y = Fr_agua_util , color = "Fr_agua_util")) +
geom_rect(aes(xmin = fecha_min,
xmax = fecha_max,
ymin = -Inf,
ymax = Inf),
fill = "blue",
alpha = 0.2,
color = NA) +
labs(title = "", x = "",
y = "Fracción de Agua Útil (0 - 1)") +
theme_minimal() +
scale_color_manual(values = c("#E9C46A")) +
guides(color = "none") +
coord_cartesian(ylim = c(0, NA))
agua_util
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
runApp('E:/TRABAJO/CERBAS/GrupoAgrometeorologia/App_Meteo')
balcarce_EMC <- read_excel("balcarce_EMC.xlsx",
col_types = c("date", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text", "numeric", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric"))
library(rsconnect)
library(sendmailR)
library(shiny)
library(shinyWidgets)
library(shinydashboard)
library(shinycssloaders)
library(DT)
library(tidyr)
library(ggplot2)
library(plotly)
library(dplyr)
library(bslib)
library(shinythemes)
library(bs4Dash)
library(lubridate)
library(png)
library(readxl)
balcarce_EMC <- read_excel("balcarce_EMC.xlsx",
col_types = c("date", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"text", "numeric", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric"))
datos <- balcarce_EMC
datos <- subset(datos, select = -c(Direccion_Viento_200cm, Direccion_Viento_1000cm))
datos$Fecha <- as.Date(datos$Fecha, format = "%Y-%m-%d")
datos <- datos[order(datos$Fecha, decreasing = TRUE), ]
datos_actuales <- datos[!is.na(datos$Precipitacion_Pluviometrica) &
!is.na(datos$Temperatura_Abrigo_150cm_Maxima) &
!is.na(datos$Temperatura_Abrigo_150cm_Minima), ]
ultima_fecha <- max(datos_actuales$Fecha)
ultimos_datos <- datos_actuales[datos_actuales$Fecha == ultima_fecha, ]
lluvia_ultimo_dia <- ultimos_datos$Precipitacion_Pluviometrica
Tmax_ultimo_dia <- ultimos_datos$Temperatura_Abrigo_150cm_Maxima
Tmin_ultimo_dia <- ultimos_datos$Temperatura_Abrigo_150cm_Minima
datos_historicos <- datos %>%
filter(Año >= 1991 & Año <= 2020)
current_year <- max(datos_actuales$Año)
pp_acum <- sum(subset(datos_actuales, Año == current_year)$Precipitacion_Pluviometrica)
pp_acum
current_year
datos
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
